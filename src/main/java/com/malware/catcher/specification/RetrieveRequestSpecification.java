package com.malware.catcher.specification;

import com.malware.catcher.model.DetectionData;
import com.malware.catcher.model.DeviceData;
import lombok.AllArgsConstructor;
import lombok.extern.slf4j.Slf4j;
import org.springframework.data.jpa.domain.Specification;

import javax.persistence.criteria.*;

@Slf4j
@AllArgsConstructor
public class RetrieveRequestSpecification implements Specification<DetectionData> {

    private SearchCriteria criteria;

    @Override
    public Predicate toPredicate(Root<DetectionData> root, CriteriaQuery<?> query, CriteriaBuilder builder) {

        // Detection search parameter
        if (!criteria.isDeviceParam()) {
            if (criteria.getOperation().equalsIgnoreCase(":")) {
                return builder.equal(root.get(criteria.getKey()), criteria.getValue());
            }
        }

        // Device search parameter
        if (criteria.isDeviceParam()) {
            Join<DetectionData, DeviceData> deviceDataJoin = root.join("deviceData");
            return builder.equal(deviceDataJoin.get(criteria.getKey()), criteria.getValue());
        }

        return null;
    }

}
